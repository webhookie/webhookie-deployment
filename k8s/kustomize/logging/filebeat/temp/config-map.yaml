apiVersion: v1
kind: ConfigMap
metadata:
  name: webhookie-filebeat-config
  namespace: webhookie-logging
  labels:
    k8s-app: webhookie-filebeat
data:
  filebeat.yml: |-
    filebeat.inputs:
    #- type: container
    #  paths:
    #   - /var/log/containers/*.log
    # processors:
    #    - add_kubernetes_metadata:
    #        host: ${NODE_NAME}
    #        matchers:
    #          - logs_path:
    #              logs_path: "/var/log/containers/"
    #    - decode_json_fields:
    #        fields: ["_source", "message"]
    #        target: ""
    #        max_depth: 3              
    #        process_array: false
    #        overwrite_keys: true
    #        add_error_key: true
    filebeat.autodiscover:
      providers:
        - type: kubernetes
          node: ${NODE_NAME}
          hints.enabled: true
          hints.default_config.enabled: false
          hints.default_config:
            type: container
            paths:
              - /var/log/containers/*-${data.kubernetes.container.id}.log
            processors:
              - decode_json_fields:
                  fields: ["_source", "message"]
                  target: ""
                  max_depth: 3
                  process_array: false
                  overwrite_keys: true
                  add_error_key: true
          
          #processors:
          #- add_cloud_metadata:
          #- add_host_metadata:
    
    cloud.id: ${ELASTIC_CLOUD_ID}
    cloud.auth: ${ELASTIC_CLOUD_AUTH}
    
    setup.dashboards.enabled: true
    #setup.kibana.host: "webhookie-kibana-kb-http.webhookie-logging.svc.cluster.local:5601"
    setup.kibana.host: "webhookie-kibana-kb-http:5601"
    setup.kibana.protocol: "https"
    setup.kibana.ssl.verification_mode: "none"
    
    output.elasticsearch:
      hosts: ['${ELASTICSEARCH_HOST:webhookie-elasticsearch-es-http}:${ELASTICSEARCH_PORT:9200}']
      ssl.verification_mode: "none"
      protocol: https
      username: ${ELASTICSEARCH_USERNAME}
      password: ${ELASTICSEARCH_PASSWORD}
